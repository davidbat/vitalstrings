Re: Sparse Matrices in Java
Re: Sparse Matrices in Java
Subject: Re: Sparse Matrices in Java
From: Zeb Tate < zebtate@ieee.org >
Date: Thu, 5 Aug 2004 03:49:04 -0500
Content-Transfer-Encoding: 7bit
Reply-To: zebtate@ieee.org
Baris,  I would agree that if you can use an iterative solver that  JMP can do the job.  Unfortunately, JMP (it's now known as  MTJ) doesn't support direct solution of sparse matrices.  I  tried it after I realized JAMA was just going to blow up  memory-wise on me (I'm working with up to 20000x20000  systems).  Anyway, MTJ only has iterative solvers, and while  it has quite a few iterative solvers I didn't find any of  them to work particularly well with my particular application  (the Newton-Raphson power flow), due to my matrices being  very ill-conditioned and unsymmetric.    This is why I've gone ahead and tied into UMFPACK which is  apparently one of the better sparse solvers out there (it's  one MATLAB uses, for instance).  It does direct solution,  which is really what I'm after.    Perhaps you meant I should look into using MTJ for its Matrix  data structures, rather than any of its solver classes.  If  so, that's probably a good idea; I just coded my own  compressed column matrix because I wanted to be able to  easily manipulate the underlying arrays for export to UMFPACK  function calls in C.  If I weren't interested in getting at  the underlying arrays so easily, I'd probably be using the  smt.CompColMatrix instead (instead, I just use a singly- linked list for each column).  -Zeb  ---- Original message ---- >Date: Thu, 5 Aug 2004 02:16:55 -0400 (EDT) >From: Baris M Kazar <kazar@ece.umn.edu>>Subject: Re: Sparse Matrices in Java >To: Multiple recipients of list <jama@nist.gov>>>>>Hi Zeb,- > we could use JMP  ( http://www.mi.uib.no/~bjornoh/jmp/0.7.2/overview.html ) >with JAMA and it is pretty useful :) >>hope this helps, >baris >>On Thu, 5 Aug 2004, Zeb Tate wrote: >>// >//Hi everyone, >// >//I've used JAMA for quite a while with a program I'm writing >//to solve power systems, but ended up abandoning the library >//due to its inability to handle sparse matrices.  I had to >//eventually code my own sparse matrix class, though I'm >//currently cheating on the solver aspects by making calls to >//UMFPACK through JNI.  I am planning on implementing a  direct >//sparse solver in Java at some point, but haven't had time  yet. >// >//This would be a rather useful additon to any Java math >//library due to the frequent occurrence of sparse matrices  in >//various science disciplines (particularly finite element >//analysis and network solutions).  There's also a wealth of >//literature out there in SIAM, ACM, and IEEE journals with >//algorithms on solving sparse systems. >// >//I know that there are already some packages out there (e.g. >//MTJ), but I haven't found one yet that does direct solution >//of sparse systems. >// >//Is anyone else interested in developing something as either >//an addition to JAMA or as a separate project?  If so, let  me >//know and I can provide more detail about what I've done  thus >//far. >// >//-Zeb Tate >// >//zebtate@ieee.org >// >// >// >// >>--Baris Mustafa Kazar > Electrical and Computer > Engineering Department > University of Minnesota > 200 Union St SE > Minneapolis,MN 55455 USA > Phone: +1 612 624 8545 > Email: kazar@ece.umn.edu >>>
Follow-Ups:
