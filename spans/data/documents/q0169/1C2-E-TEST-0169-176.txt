2 Years Ago
0
#include <iostream> using namespace std;  class sMatrix { public:  sMatrix(int,int);  sMatrix (sMatrix&);  int getR();  int getC();  bool rValid(double);  bool cValid(double);  void setEl(double,double,double);  double getEl(int i,int j);  double getVal(int, int);  void print();  void add(sMatrix&);  void sub(sMatrix&); private:  int nr, nc; //number of row and cols  int nent; //number of entries  int nmax; //the max number of entries  double *data; //store the data, the size of the storage is nmax*3 };  sMatrix::sMatrix(int rr,int cc) {  nr=rr;  nc=cc;  nent=0;  nmax=(nr*nc)/2;  data=new double [3*nmax];  for (int i=0; i<3*nmax; i++)   data [i]=0.0; }  int sMatrix::getR() {  return nr; }  int sMatrix::getC() {  return nc; }  bool sMatrix::rValid(double r) {  if (r<0 || r>=nr)   return false;  return true; }  bool sMatrix::cValid(double r) {  if (r<0 || r>=nc)   return false;  return true; }  void sMatrix::setEl(double r,double c, double val) {  int i;  if (rValid(r) && cValid(c))  {   // when adding a new value   i=3*nent;   data[i]=r;   data[i+1]=c;   data[i+2]=val;   nent++;   //spots already exists so update value  } }  void sMatrix::print() {  int i;  for (i=0;i<3*nent;i+=3)  {   cout<<"<"<<data[i]<<",";   cout<<""<<data[i+1]<<",";   cout<<""<<data[i+2]<<">"<<endl;  } }   double sMatrix::getVal(int i, int j) {  // search through data for a give i,j  // and if it finds (i,j) return value  // otherwise return 0  for(int c=0;c<3*nent;c+=3)  {   if(data[c]==i && data[c+1]==j)    return data[c+2];  }  return 0; }   void sMatrix::add(sMatrix &N) {  int i,j;  for (i=0;i<=nr;i++)  {    for (j=0;j<=nc;j++)   {    double Val1=getVal(i,j);    double Val2=N.getVal(i,j);    double Val=Val1+ Val2;    if(Val!=0)    {    setEl(i,j,Val1+Val2);    }   }  } }  void sMatrix::sub(sMatrix &N) {  int i,j;  for (i=0;i<=nr;i++)  {    for (j=0;j<=nc;j++)   {    double Val1 =getVal(i,j);    double Val2 =N.getVal(i,j);    double Val =Val1-Val2;    if(Val!=0)    {    setEl(i,j,Val1-Val2);    }   }  } }  int main () {  sMatrix M(3,3);  M.setEl(0,0,3);  M.setEl(1,1,4);  M.setEl(2,0,2.4);  cout<<"Matrix M is: "<<endl;  M.print();   sMatrix N(3,3);  N.setEl(1,0,-3);  N.setEl(1,0,0);  N.setEl(2,0,2.4);  cout<<"Matrix N is: "<<endl;  N.print();    cout<<"The sum of the matrix is: "<<endl;  M.add(N);  M.print();    cout<<"The difference of the matrix is: "<<endl;  M.sub(N);  M.print(); }
So I've worked on it some more and what I get is for it to print M and N, and then it crashes, the part is red is all i need to figure out and hopefully it'll work.
